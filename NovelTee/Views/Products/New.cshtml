@model NovelTee.ViewModels.ProductFormViewModel
            
@{
    ViewBag.Title = ViewData["Title"];
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@ViewBag.Title Product</h2>

<div class="container">
    <div class="content">
        <div class="title">

        </div>
        <div class="img-preview">
            <div>
                <!--Image Upload-->
                @{
                    if (ViewBag.Title == "Edit")
                    {
                        <img id="output" src="@Url.Content(Model.Product.ImagePath)" />
                    }
                    else
                    {
                        <img id="output" />
                    }
                }
            </div>
        </div>
        <div>
        </div>
        <div class="options">
            <!--
                Tee variant => Future Order
                -->
            @using (Html.BeginForm("Save", "Products", FormMethod.Post, new { enctype = "multipart/form-data"}))
            {
                @Html.ValidationSummary(true, "Please fix the following errors.")
                <div class="form-group">
                    @Html.LabelFor(p => p.Product.Name)
                    @Html.TextBoxFor(p => p.Product.Name, new { @class = "form-control" })
                    @Html.ValidationMessageFor(p => p.Product.Name)
                </div>
                <div class="form-group">
                    @Html.LabelFor(p => p.Product.Description)
                    @Html.TextBoxFor(p => p.Product.Description, new { @class = "form-control" })
                    @Html.ValidationMessageFor(p => p.Product.Description)
                </div>
                <div class="form-group">
                    @Html.LabelFor(p => p.Product.Price)
                    @Html.TextBoxFor(p => p.Product.Price, new { @class = "form-control" })
                    @Html.ValidationMessageFor(p => p.Product.Price)
                </div>
                <div class="form-group">
                    @Html.LabelFor(p => p.Product.CategoryID)
                    @Html.DropDownListFor(p => p.Product.CategoryID, new SelectList(Model.Category, "Id", "Cat_Name"), "Select Category", new { @class = "form-control" })
                    @Html.ValidationMessageFor(p => p.Product.CategoryID)
                </div>
                <div class="form-group">
                    @Html.LabelFor(p => p.Product.ImagePath)
                    @{
                        if (ViewBag.Title == "Edit")
                        {
                            <input type="file" name="Product.ImageFile" class="input-group" onchange="loadFile(event)" />
                        }
                        else
                        {
                            <input type="file" name="Product.ImageFile" class="input-group" onchange="loadFile(event)" required />
                        }

                    }
                </div>
                @Html.HiddenFor(p => p.Product.Id, new { @Value = Model.Product == null ? 0 : Model.Product.Id})
                @Html.AntiForgeryToken()
                <!--Quantity-->
                <button type="submit" class="btn btn-primary">@ViewBag.Title Product</button>
            }
        </div>
    </div>
</div>
<script>
    var loadFile = function (event) {
        var output = document.getElementById('output');
        output.src = URL.createObjectURL(event.target.files[0])
    };
</script>